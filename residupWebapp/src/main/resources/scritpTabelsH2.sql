--Tabela MORADOR
CREATE TABLE IF NOT EXISTS MORADOR(
    ID_MORADOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(60) NOT NULL,
    SOBRENOME VARCHAR(60) NOT NULL,
    CPF VARCHAR(11) NOT NULL,
    RG VARCHAR(9) NOT NULL,
    NUMERO_APARTAMENTO VARCHAR(4),
    BLOCO VARCHAR(2),
    SENHA_ACESSO VARCHAR(120),
    DATA_INCERCAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DATA_ALTERACAO TIMESTAMP,
    FOTO_FILE_PATH VARCHAR(120),
    STATUS_CONTA CHAR(1) DEFAULT '1'  NOT NULL
);

-- Índice único em CPF
CREATE UNIQUE INDEX IF NOT EXISTS CPF_UNIQUE ON MORADOR (CPF);

-- Tabela VISITANTE
CREATE TABLE IF NOT EXISTS VISITANTE (
    ID_VISITANTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(60) NOT NULL,
    SOBRENOME VARCHAR(60) NOT NULL,
    DOCUMENTO VARCHAR(15) NOT NULL,
    TELEFONE VARCHAR(11),
    STATUS_CONTA CHAR(1) DEFAULT '1'  NOT NULL
);

-- Tabela MORADOR_DEPENDENTE
CREATE TABLE IF NOT EXISTS MORADOR_DEPENDENTE (
    ID_MORADOR_DEPENDENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(120) NOT NULL,
    DOCUMENTO VARCHAR(45),
    ID_MORADOR INT NOT NULL,
    FOREIGN KEY (ID_MORADOR) REFERENCES MORADOR (ID_MORADOR) ON DELETE NO ACTION ON UPDATE NO ACTION
);


-- Tabela AREA

CREATE TABLE IF NOT EXISTS AREA (
    ID_AREA INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(45) NOT NULL,
    LIMITE_PESSOAS INT NOT NULL
);

-- Tabela RESERVA_AREA
CREATE TABLE IF NOT EXISTS RESERVA_AREA (
    ID_RESERVA_AREA INT PRIMARY KEY AUTO_INCREMENT,
    DATA_RESERVA DATE NOT NULL,
    HORA_RESERVA VARCHAR(20) NOT NULL,
    ID_MORADOR INT NOT NULL,
    ID_AREA INT NOT NULL,
    FOREIGN KEY (ID_MORADOR) REFERENCES MORADOR (ID_MORADOR) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (ID_AREA) REFERENCES AREA (ID_AREA) ON DELETE NO ACTION ON UPDATE NO ACTION
);

-- Tabela REGISTRO_VISITANTE
CREATE TABLE IF NOT EXISTS REGISTRO_VISITANTE (
    ID_REGISTRO INT PRIMARY KEY AUTO_INCREMENT,
    ID_MORADOR INT NOT NULL,
    ID_VISITANTE INT NOT NULL,
    DATA_REGISTRO DATE NOT NULL,
    CHECK_IN CHAR(1),
    DATA_CHECK_IN DATE,
    FOREIGN KEY (ID_MORADOR) REFERENCES MORADOR (ID_MORADOR) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (ID_VISITANTE) REFERENCES VISITANTE (ID_VISITANTE) ON DELETE NO ACTION ON UPDATE NO ACTION
);


-- Tabela REGISTRO_OCORRENCIA

CREATE TABLE IF NOT EXISTS REGISTRO_OCORRENCIA (
    ID_OCORRENCIA INT NOT NULL AUTO_INCREMENT,
    TITULO VARCHAR(20) NOT NULL,
    OCORRENCIA VARCHAR(250) NOT NULL,
    DATA_REGISTRO_OCORRENCIA DATE NOT NULL,
    ID_MORADOR INT NOT NULL,
    STATUS VARCHAR(15),
    PRIMARY KEY (ID_OCORRENCIA, ID_MORADOR),
    FOREIGN KEY (ID_MORADOR) REFERENCES MORADOR (ID_MORADOR) ON DELETE NO ACTION ON UPDATE NO ACTION
);


-- Tabela CONVIDADO_RESERVA

CREATE TABLE IF NOT EXISTS CONVIDADO_RESERVA (
    ID_CONVIDADO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(60) NOT NULL,
    DOCUMENTO VARCHAR(15) NOT NULL,
    ID_RESERVA_AREA INT NOT NULL,
    ID_MORADOR INT NOT NULL,
    FOREIGN KEY (ID_RESERVA_AREA) REFERENCES RESERVA_AREA (ID_RESERVA_AREA) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (ID_MORADOR) REFERENCES MORADOR (ID_MORADOR) ON DELETE NO ACTION ON UPDATE NO ACTION
);




INSERT INTO AREA (NOME, LIMITE_PESSOAS)
SELECT 'Salão de festas', 40 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM AREA WHERE NOME = 'Salão de festas')
UNION ALL
SELECT 'Sala de reunião', 15 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM AREA WHERE NOME = 'Sala de reunião')
UNION ALL
SELECT 'Churrasqueira', 30 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM AREA WHERE NOME = 'Churrasqueira')
UNION ALL
SELECT 'Quadra de tênis', 10 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM AREA WHERE NOME = 'Quadra de tênis');



INSERT INTO MORADOR (NOME, SOBRENOME, CPF, RG, NUMERO_APARTAMENTO, BLOCO, SENHA_ACESSO)
SELECT 'Admin', 'Padrão', '00011122233', '123456789', '001', 'A', 'p8gj1q8bswXwzUS1IqJbIYGiKQsLDMZinLEkhvP2wCfLxBHglsayz/5ak5QuxJ/E'
FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM MORADOR WHERE CPF = '00011122233');



